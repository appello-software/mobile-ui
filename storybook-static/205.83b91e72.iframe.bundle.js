(self.webpackChunk_appello_mobile_ui=self.webpackChunk_appello_mobile_ui||[]).push([[205],{"./.storybook/constants.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EXTENDED_CATEGORY=exports.CONFIG_DETAIL=exports.CONFIG_CATEGORY=void 0;exports.CONFIG_CATEGORY="Mostly for config";exports.EXTENDED_CATEGORY="Extended";exports.CONFIG_DETAIL="You can set it up in the component config"},"./src/__defaults__/defaultTheme.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.defaultTheme=exports.colors=void 0;var colors={primary:"#1C88EC",white:"#FFFFFF",error:"#EF4646",success:"#219653",black:{1:"#0F1010",2:"#27292E",3:"#404548"},gray:{1:"#6F6F75",2:"#91919E",3:"#B8B8C6",4:"#D4D4E3",5:"#E8E8F4",6:"#F0F0F6",7:"#F9F9FB"}};exports.colors=colors;var defaultTheme={colors,shadow:{1:{shadowColor:"#a8a8a8",shadowOffset:{width:0,height:5},shadowRadius:3,shadowOpacity:1,elevation:4},2:{shadowColor:"#a8a8a8",shadowOffset:{width:0,height:5},shadowRadius:3,shadowOpacity:1,elevation:4},3:{shadowColor:"#a8a8a8",shadowOffset:{width:0,height:5},shadowRadius:3,shadowOpacity:1,elevation:4},4:{shadowColor:"#a8a8a8",shadowOffset:{width:0,height:5},shadowRadius:3,shadowOpacity:1,elevation:4}}};exports.defaultTheme=defaultTheme},"./src/components/common/AppText/index.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.useAppTextStyles=exports.AppText=void 0;var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_StyleSheet=(_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/StyleSheet/index.js"))),_Text=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/Text/index.js")),_useCombinedPropsWithConfig=__webpack_require__("./src/hooks/useCombinedPropsWithConfig.ts"),_useCombinedStylesWithConfig=__webpack_require__("./src/hooks/useCombinedStylesWithConfig.ts"),_utils=__webpack_require__("./src/utils/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["variant","weight","color","uppercase","underline","style"],AppText=function AppText(props){var styles=(0,_useCombinedStylesWithConfig.useCombinedStylesWithConfig)("AppText",useAppTextStyles),_useCombinedPropsWith=(0,_useCombinedPropsWithConfig.useCombinedPropsWithConfig)("AppText",props),_useCombinedPropsWith2=_useCombinedPropsWith.variant,variant=void 0===_useCombinedPropsWith2?"p3":_useCombinedPropsWith2,_useCombinedPropsWith3=_useCombinedPropsWith.weight,weight=void 0===_useCombinedPropsWith3?"regular":_useCombinedPropsWith3,color=_useCombinedPropsWith.color,uppercase=_useCombinedPropsWith.uppercase,underline=_useCombinedPropsWith.underline,style=_useCombinedPropsWith.style,textProps=(0,_objectWithoutProperties2.default)(_useCombinedPropsWith,_excluded);return(0,_jsxRuntime.jsx)(_Text.default,Object.assign({},textProps,{style:_StyleSheet.default.flatten([styles["app-text"],styles["app-text--"+variant],styles["app-text--"+weight],style,!!color&&{color},uppercase&&{textTransform:"uppercase"},underline&&{textDecorationLine:"underline"}])}))};exports.AppText=AppText;var useAppTextStyles=(0,_utils.makeStyles)((function(){return _StyleSheet.default.create({"app-text":{},"app-text--h1":{fontSize:34,lineHeight:48},"app-text--h2":{fontSize:29,lineHeight:42},"app-text--h3":{fontSize:26,lineHeight:36},"app-text--h4":{fontSize:21,lineHeight:32},"app-text--h5":{fontSize:19,lineHeight:30},"app-text--h6":{fontSize:17,lineHeight:25},"app-text--p1":{fontSize:15,lineHeight:24},"app-text--p2":{fontSize:14,lineHeight:21},"app-text--p3":{fontSize:13,lineHeight:23},"app-text--p4":{fontSize:12,lineHeight:21},"app-text--p5":{fontSize:11,lineHeight:16},"app-text--p6":{fontSize:10,lineHeight:16},"app-text--light":{},"app-text--regular":{},"app-text--medium":{},"app-text--bold":{}})}));exports.useAppTextStyles=useAppTextStyles;try{AppText.displayName="AppText",AppText.__docgenInfo={description:"Primary UI component for text displaying.\nIt extends default [RN Text](https://reactnative.dev/docs/text) component and its props.",displayName:"AppText",props:{variant:{defaultValue:null,description:"Variant of displaying text",name:"variant",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'},{value:'"p1"'},{value:'"p2"'},{value:'"p3"'},{value:'"p4"'},{value:'"p5"'},{value:'"p6"'}]}},color:{defaultValue:null,description:"Text color",name:"color",required:!1,type:{name:"string"}},uppercase:{defaultValue:null,description:"Should text be in uppercase",name:"uppercase",required:!1,type:{name:"boolean"}},underline:{defaultValue:null,description:"Should text be underlined",name:"underline",required:!1,type:{name:"boolean"}},weight:{defaultValue:null,description:"Text weight",name:"weight",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"regular"'},{value:'"medium"'},{value:'"bold"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/AppText/index.tsx#AppText"]={docgenInfo:AppText.__docgenInfo,name:"AppText",path:"src/components/common/AppText/index.tsx#AppText"})}catch(__react_docgen_typescript_loader_error){}try{useAppTextStyles.displayName="useAppTextStyles",useAppTextStyles.__docgenInfo={description:"",displayName:"useAppTextStyles",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/AppText/index.tsx#useAppTextStyles"]={docgenInfo:useAppTextStyles.__docgenInfo,name:"useAppTextStyles",path:"src/components/common/AppText/index.tsx#useAppTextStyles"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/TextInput/index.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Masks",{enumerable:!0,get:function get(){return _reactNativeMaskInput.Masks}}),exports.TextInput=void 0,Object.defineProperty(exports,"createNumberMask",{enumerable:!0,get:function get(){return _reactNativeMaskInput.createNumberMask}}),exports.useTextInputStyles=void 0;var _slicedToArray2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js")),_objectWithoutProperties2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_StyleSheet=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/StyleSheet/index.js")),_TextInput=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/TextInput/index.js")),_TouchableOpacity=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/TouchableOpacity/index.js")),_View=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/View/index.js")),_reactNativeMaskInput=__webpack_require__("./node_modules/react-native-mask-input/lib/module/index.js"),_utils=__webpack_require__("./src/config/utils.tsx"),_useCombinedPropsWithConfig=__webpack_require__("./src/hooks/useCombinedPropsWithConfig.ts"),_useCombinedStylesWithConfig=__webpack_require__("./src/hooks/useCombinedStylesWithConfig.ts"),_utils2=__webpack_require__("./src/utils/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["error","disabled","onPress","multiline","style","value","onChangeText","placeholder","Icon","accessoryRight","mask","placeholderFillCharacter","iconSize","placeholderTextColor"],TextInput=function TextInput(props){var theme=(0,_utils.useUIKitTheme)(),styles=(0,_useCombinedStylesWithConfig.useCombinedStylesWithConfig)("TextInput",useTextInputStyles),_useCombinedPropsWith=(0,_useCombinedPropsWithConfig.useCombinedPropsWithConfig)("TextInput",props),error=_useCombinedPropsWith.error,disabled=_useCombinedPropsWith.disabled,onPress=_useCombinedPropsWith.onPress,multiline=_useCombinedPropsWith.multiline,style=_useCombinedPropsWith.style,value=_useCombinedPropsWith.value,onChangeText=_useCombinedPropsWith.onChangeText,placeholder=_useCombinedPropsWith.placeholder,Icon=_useCombinedPropsWith.Icon,accessoryRight=_useCombinedPropsWith.accessoryRight,mask=_useCombinedPropsWith.mask,placeholderFillCharacter=_useCombinedPropsWith.placeholderFillCharacter,_useCombinedPropsWith2=_useCombinedPropsWith.iconSize,iconSize=void 0===_useCombinedPropsWith2?{width:20,height:20}:_useCombinedPropsWith2,_useCombinedPropsWith3=_useCombinedPropsWith.placeholderTextColor,placeholderTextColor=void 0===_useCombinedPropsWith3?theme.colors.gray[3]:_useCombinedPropsWith3,textInputProps=(0,_objectWithoutProperties2.default)(_useCombinedPropsWith,_excluded),_React$useState=_react.default.useState(!1),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),isFocused=_React$useState2[0],setIsFocused=_React$useState2[1],fullStyle=_StyleSheet.default.flatten([styles["text-input"],style,multiline&&styles["text-input--multiline"],!multiline&&!!Icon&&styles["text-input--with-icon"],disabled&&styles["text-input--disabled"],!disabled&&error&&styles["text-input--error"],!disabled&&!error&&isFocused&&styles["text-input--focused"]]),_useMaskedInputProps=(0,_reactNativeMaskInput.useMaskedInputProps)({value,onChangeText,mask,placeholderFillCharacter}),onMaskChangeText=_useMaskedInputProps.onChangeText,maskValue=_useMaskedInputProps.value,maskPlaceholder=_useMaskedInputProps.placeholder;return(0,_jsxRuntime.jsxs)(_TouchableOpacity.default,{disabled:disabled||!onPress,onPress,children:[(0,_jsxRuntime.jsx)(_TextInput.default,Object.assign({},textInputProps,{style:fullStyle,placeholderTextColor,placeholder:null!=placeholder?placeholder:maskPlaceholder,value:maskValue,onChangeText:onMaskChangeText,onFocus:function handleFocus(e){null==textInputProps.onFocus||textInputProps.onFocus(e),setIsFocused(!0)},onBlur:function handleBlur(e){null==textInputProps.onBlur||textInputProps.onBlur(e),setIsFocused(!1)},editable:!disabled&&!onPress,multiline})),!multiline&&Icon?(0,_jsxRuntime.jsx)(_View.default,{style:styles["text-input__icon-container"],children:(0,_jsxRuntime.jsx)(Icon,{color:"color"in fullStyle?null==fullStyle?void 0:fullStyle.color:void 0,width:null==iconSize?void 0:iconSize.width,height:null==iconSize?void 0:iconSize.height})}):null,!multiline&&accessoryRight?(0,_jsxRuntime.jsx)(_View.default,{style:styles["text-input__accessory-right-container"],children:accessoryRight}):null]})};exports.TextInput=TextInput;var useTextInputStyles=(0,_utils2.makeStyles)((function(theme){return _StyleSheet.default.create({"text-input":{height:54,paddingHorizontal:18,borderRadius:6,borderWidth:1,borderStyle:"solid",fontSize:13,textAlignVertical:"center",includeFontPadding:!1,color:theme.colors.black[1],backgroundColor:theme.colors.white,borderColor:theme.colors.gray[5]},"text-input--with-icon":{paddingLeft:47},"text-input--disabled":{color:theme.colors.gray[3],backgroundColor:theme.colors.gray[7],borderColor:theme.colors.gray[7]},"text-input--focused":{borderColor:theme.colors.primary},"text-input--error":{borderColor:theme.colors.error},"text-input--multiline":{height:104,paddingHorizontal:19},"text-input__accessory-right-container":{height:"100%",position:"absolute",top:0,right:0,alignItems:"center",justifyContent:"center"},"text-input__icon-container":{height:"100%",position:"absolute",top:0,left:18,alignItems:"center",justifyContent:"center"}})}));exports.useTextInputStyles=useTextInputStyles;try{TextInput.displayName="TextInput",TextInput.__docgenInfo={description:"Primary UI component for inputting text into the app via a keyboard.<br>\nIt extends default [RN TextInput](https://reactnative.dev/docs/textinput) component and its props.<br>\nIt has additional built-in functionality such as icon on the left, any right accessory and mask.",displayName:"TextInput",props:{error:{defaultValue:null,description:"Should TextInput have an error state",name:"error",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Should TextInput be disabled",name:"disabled",required:!1,type:{name:"boolean"}},onPress:{defaultValue:null,description:"Callback that is called after a touch. If set, TextInput is not editable",name:"onPress",required:!1,type:{name:"(() => void)"}},accessoryRight:{defaultValue:null,description:"ReactNode to display on the right of the TextInput",name:"accessoryRight",required:!1,type:{name:"ReactNode"}},Icon:{defaultValue:null,description:"Icon component to display on the left of the TextInput",name:"Icon",required:!1,type:{name:"FC<SvgProps>"}},iconSize:{defaultValue:null,description:"Size of the Icon component",name:"iconSize",required:!1,type:{name:"{ width: number; height: number; }"}},mask:{defaultValue:null,description:"Mask to display text in specific format ([check the documentation here](https://github.com/CaioQuirinoMedeiros/react-native-mask-input#mask))",name:"mask",required:!1,type:{name:"Mask"}},placeholderFillCharacter:{defaultValue:null,description:'Character to be used as the "fill character" on the default placeholder value when using mask.',name:"placeholderFillCharacter",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/TextInput/index.tsx#TextInput"]={docgenInfo:TextInput.__docgenInfo,name:"TextInput",path:"src/components/common/TextInput/index.tsx#TextInput"})}catch(__react_docgen_typescript_loader_error){}try{useTextInputStyles.displayName="useTextInputStyles",useTextInputStyles.__docgenInfo={description:"",displayName:"useTextInputStyles",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/TextInput/index.tsx#useTextInputStyles"]={docgenInfo:useTextInputStyles.__docgenInfo,name:"useTextInputStyles",path:"src/components/common/TextInput/index.tsx#useTextInputStyles"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/form/Field/index.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.useFieldStyle=exports.Field=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_StyleSheet=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/StyleSheet/index.js")),_View=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/View/index.js")),_AppText=__webpack_require__("./src/components/common/AppText/index.tsx"),_useCombinedPropsWithConfig=__webpack_require__("./src/hooks/useCombinedPropsWithConfig.ts"),_useCombinedStylesWithConfig=__webpack_require__("./src/hooks/useCombinedStylesWithConfig.ts"),_utils=__webpack_require__("./src/utils/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Field=function Field(props){var styles=(0,_useCombinedStylesWithConfig.useCombinedStylesWithConfig)("Field",useFieldStyle),_useCombinedPropsWith=(0,_useCombinedPropsWithConfig.useCombinedPropsWithConfig)("Field",props),label=_useCombinedPropsWith.label,error=_useCombinedPropsWith.error,children=_useCombinedPropsWith.children,_useCombinedPropsWith2=_useCombinedPropsWith.labelProps,labelProps=void 0===_useCombinedPropsWith2?{variant:"p3"}:_useCombinedPropsWith2,_useCombinedPropsWith3=_useCombinedPropsWith.errorProps,errorProps=void 0===_useCombinedPropsWith3?{variant:"p3"}:_useCombinedPropsWith3,renderError=_useCombinedPropsWith.renderError,style=_useCombinedPropsWith.style,errorNode=_react.default.useMemo((function(){return error?renderError?renderError({children:error.message}):(0,_jsxRuntime.jsx)(_AppText.AppText,Object.assign({},errorProps,{style:[styles.field__error,null==errorProps?void 0:errorProps.style],children:error.message})):null}),[error,renderError,errorProps,styles.field__error]);return(0,_jsxRuntime.jsxs)(_View.default,{style:[styles.field,style],children:[label?(0,_jsxRuntime.jsx)(_AppText.AppText,Object.assign({},labelProps,{style:[styles.field__label,null==labelProps?void 0:labelProps.style],children:label})):null,(0,_jsxRuntime.jsx)(_View.default,{children}),errorNode]})};exports.Field=Field;var useFieldStyle=(0,_utils.makeStyles)((function(theme){return _StyleSheet.default.create({field:{},field__label:{color:theme.colors.gray[2],marginBottom:3},field__error:{color:theme.colors.error,marginTop:3}})}));exports.useFieldStyle=useFieldStyle;try{Field.displayName="Field",Field.__docgenInfo={description:"A common wrapper for form fields, mostly for displaying label and errors",displayName:"Field",props:{children:{defaultValue:null,description:"A form component that is being wrapped",name:"children",required:!0,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Field label",name:"label",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"[`react-hook-form` Field error](https://react-hook-form.com/ts#FieldError)",name:"error",required:!1,type:{name:"FieldError"}},style:{defaultValue:null,description:"Additional style of field wrapper",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>"}},labelProps:{defaultValue:null,description:"Properties of the label text",name:"labelProps",required:!1,type:{name:"AppTextProps"}},errorProps:{defaultValue:null,description:"Properties of the error text",name:"errorProps",required:!1,type:{name:"AppTextProps"}},renderError:{defaultValue:null,description:"Function for error displaying in case of more custom errors than just text",name:"renderError",required:!1,type:{name:"((props: { children?: ReactNode; }) => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/Field/index.tsx#Field"]={docgenInfo:Field.__docgenInfo,name:"Field",path:"src/components/form/Field/index.tsx#Field"})}catch(__react_docgen_typescript_loader_error){}try{useFieldStyle.displayName="useFieldStyle",useFieldStyle.__docgenInfo={description:"",displayName:"useFieldStyle",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/Field/index.tsx#useFieldStyle"]={docgenInfo:useFieldStyle.__docgenInfo,name:"useFieldStyle",path:"src/components/form/Field/index.tsx#useFieldStyle"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/form/TextField/index.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextField=void 0;var _objectWithoutProperties2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),_reactHookForm=(_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),__webpack_require__("./node_modules/react-hook-form/dist/index.cjs.js")),_TextInput=__webpack_require__("./src/components/common/TextInput/index.tsx"),_Field=__webpack_require__("./src/components/form/Field/index.tsx"),_utils=__webpack_require__("./src/components/form/utils.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["name","control","label","style"],TextField=function TextField(_ref){var name=_ref.name,control=_ref.control,label=_ref.label,style=_ref.style,textInputProps=(0,_objectWithoutProperties2.default)(_ref,_excluded),controller=(0,_reactHookForm.useController)({name,control}),fieldError=(0,_utils.getFieldError)(controller);return(0,_jsxRuntime.jsx)(_Field.Field,{style,label,error:fieldError,children:(0,_jsxRuntime.jsx)(_TextInput.TextInput,Object.assign({value:controller.field.value,onChangeText:controller.field.onChange,onBlur:controller.field.onBlur,error:!!fieldError},textInputProps))})};exports.TextField=TextField;try{TextField.displayName="TextField",TextField.__docgenInfo={description:'Basic text field controlled by `react-hook-form` controller.<br>\nExtends the UIKit TextInput and all of its props.<br>\nExample of usage:\n\n```ts\nconst Form = (props) => {\n   const form = useForm<{ textField: string }>();\n\n   return <TextField control={form.control} name="textField" />;\n}```',displayName:"TextField",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},control:{defaultValue:null,description:"",name:"control",required:!0,type:{name:"Control<TFormValues, any>"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>"}},mask:{defaultValue:null,description:"Mask to display text in specific format ([check the documentation here](https://github.com/CaioQuirinoMedeiros/react-native-mask-input#mask))",name:"mask",required:!1,type:{name:"Mask"}},error:{defaultValue:null,description:"Should TextInput have an error state",name:"error",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Should TextInput be disabled",name:"disabled",required:!1,type:{name:"boolean"}},onPress:{defaultValue:null,description:"Callback that is called after a touch. If set, TextInput is not editable",name:"onPress",required:!1,type:{name:"(() => void)"}},accessoryRight:{defaultValue:null,description:"ReactNode to display on the right of the TextInput",name:"accessoryRight",required:!1,type:{name:"ReactNode"}},Icon:{defaultValue:null,description:"Icon component to display on the left of the TextInput",name:"Icon",required:!1,type:{name:"FC<SvgProps>"}},iconSize:{defaultValue:null,description:"Size of the Icon component",name:"iconSize",required:!1,type:{name:"{ width: number; height: number; }"}},placeholderFillCharacter:{defaultValue:null,description:'Character to be used as the "fill character" on the default placeholder value when using mask.',name:"placeholderFillCharacter",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/TextField/index.tsx#TextField"]={docgenInfo:TextField.__docgenInfo,name:"TextField",path:"src/components/form/TextField/index.tsx#TextField"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/form/utils.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getFieldError=function getFieldError(controller){return controller.formState.isValid||controller.formState.isValidating||!controller.fieldState.error?void 0:controller.fieldState.error}},"./src/config/UIKitConfigProvider.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.UIKitConfigContext=void 0;var _react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),defaultContextValue={theme:__webpack_require__("./src/__defaults__/defaultTheme.ts").defaultTheme,componentsConfig:{}},UIKitConfigContext=_react.default.createContext(defaultContextValue);exports.UIKitConfigContext=UIKitConfigContext},"./src/config/utils.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.useComponentsConfig=function useComponentsConfig(){return(0,_react.useContext)(_UIKitConfigProvider.UIKitConfigContext).componentsConfig},exports.useUIKitTheme=useUIKitTheme,exports.withUIKitTheme=withUIKitTheme;var _react=__webpack_require__("./node_modules/react/index.js"),_UIKitConfigProvider=__webpack_require__("./src/config/UIKitConfigProvider.tsx");function useUIKitTheme(){return(0,_react.useContext)(_UIKitConfigProvider.UIKitConfigContext).theme}function withUIKitTheme(wrappedFunction){return function functionWithTheme(props){var theme=useUIKitTheme();return wrappedFunction(Object.assign({theme},props))}}try{withUIKitTheme.displayName="withUIKitTheme",withUIKitTheme.__docgenInfo={description:"",displayName:"withUIKitTheme",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/config/utils.tsx#withUIKitTheme"]={docgenInfo:withUIKitTheme.__docgenInfo,name:"withUIKitTheme",path:"src/config/utils.tsx#withUIKitTheme"})}catch(__react_docgen_typescript_loader_error){}},"./src/hooks/useCombinedPropsWithConfig.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.useCombinedPropsWithConfig=function useCombinedPropsWithConfig(componentName,props){var componentConfig=(0,_utils.useComponentsConfig)()[componentName],componentProps={};null!=componentConfig&&componentConfig.defaultProps&&(componentProps="function"==typeof componentConfig.defaultProps?componentConfig.defaultProps():componentConfig.defaultProps);return Object.assign({},componentProps,props)};var _utils=__webpack_require__("./src/config/utils.tsx")},"./src/hooks/useCombinedStylesWithConfig.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.useCombinedStylesWithConfig=function useCombinedStylesWithConfig(componentName,useDefaultStyles){var componentConfig=(0,_utils.useComponentsConfig)()[componentName],defaultStyles=useDefaultStyles(),combinedStyles=defaultStyles;if(null==componentConfig||!componentConfig.styles)return combinedStyles;var configStyles=componentConfig.styles();return(0,_object.keys)(combinedStyles).forEach((function(key){combinedStyles[key]=Object.assign({},defaultStyles[key],configStyles[key])})),combinedStyles};var _object=__webpack_require__("./node_modules/@appello/common/lib/utils/object/index.js"),_utils=__webpack_require__("./src/config/utils.tsx")},"./src/utils/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.makeTheme=exports.makeStyles=exports.makeDefaultProps=exports.chroma=void 0;var _chromaJs=_interopRequireDefault(__webpack_require__("./node_modules/chroma-js/chroma.js")),_react=_interopRequireDefault(__webpack_require__("./node_modules/react/index.js")),_StyleSheet=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/StyleSheet/index.js")),_utils=__webpack_require__("./src/config/utils.tsx");_StyleSheet.default.NamedStyles;exports.makeStyles=function makeStyles(styles){return function(props){var theme=(0,_utils.useUIKitTheme)();return _react.default.useMemo((function(){return styles instanceof Function?styles(theme,props):styles}),[theme,props])}};exports.makeDefaultProps=function makeDefaultProps(makeProps){return function(){var theme=(0,_utils.useUIKitTheme)();return _react.default.useMemo((function(){return makeProps(theme)}),[theme])}};exports.makeTheme=function makeTheme(theme){return theme};var chroma=_chromaJs.default;exports.chroma=chroma}}]);